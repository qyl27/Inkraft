plugins {
    id 'com.github.johnrengelman.shadow' version "${shadow_plugin_version}"
    id 'me.shedaniel.unified-publishing' version "${unified_publishing_version}"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(':').loom.accessWidenerPath

    mods {
        'inkraft' {
            sourceSet project(':').sourceSets.main
            sourceSet sourceSets.main
        }

        'inkraft_test' {
            sourceSet project(':').sourceSets.test
        }
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    modApi "dev.architectury:architectury-fabric:${project.architectury_version}"

    modRuntimeOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"

    common(project(path: ':', configuration: 'namedElements')) { transitive = false }
    shadowCommon(project(path: ':', configuration: 'transformProductionFabric')) { transitive = false }

    implementation "com.bladecoder.ink:blade-ink:${project.blade_ink_version}"
    shadowCommon "com.bladecoder.ink:blade-ink:${project.blade_ink_version}"
}

shadowJar {
    exclude 'architectury.common.json'

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = 'dev-shadow'

    relocate 'com.bladecoder.ink', 'cx.rain.mc.inkraft.libs.com.bladecoder.ink'
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(':').sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = project.name
            version = 'true'.equalsIgnoreCase(System.getenv('MOD_RELEASE')) ? version : "${version}-SNAPSHOT"
            from components.java
        }
    }
}
